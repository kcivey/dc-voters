#!/usr/bin/env node

const assert = require('assert');
const fs = require('fs');
const csvParse = require('csv-parse');
const stringify = require('csv-stringify/lib/sync');

main()
    .catch(function (err) {
        console.error(err);
        process.exit(64);
    });

async function main() {
    const infile = process.argv[2];
    assert(infile, 'Input file required');
    const parser = fs.createReadStream(infile)
        .pipe(csvParse({columns: true}));
    let headers = true;
    let i = 1;
    for await (const oldRecord of parser) {
        const newRecord = makeNewRecord(oldRecord);
        i++;
        assert(newRecord.LASTNAME, `Missing last name (line ${i})`);
        // assert(newRecord.FIRSTNAME, `Missing first name (line ${i})`);
        assert(newRecord.PARTY, `Missing party (line ${i})`);
        assert(newRecord.PARTY, `Missing party (line ${i})`);
        assert(newRecord.RES_HOUSE, `Missing house number (line ${i})`);
        assert(newRecord.RES_HOUSE.match(/^\d+$/), `Invalid house number (line ${i})`);
        assert(newRecord.PARTY, `Missing street (line ${i})`);
        // assert(newRecord.PRECINCT, `Missing precinct (line ${i})`);
        // assert(newRecord.PRECINCT.match(/^1?\d\d?$/), `Invalid precinct (line ${i})`);
        // assert(newRecord.WARD, `Missing ward (line ${i})`);
        // assert(newRecord.WARD.match(/^[1-8]$/), `Invalid ward (line ${i})`);
        if (newRecord.STATUS === 'I') {
            continue;
        }
        assert(newRecord.STATUS === 'A', `Wrong status (line ${i})`);
        if (headers) {
            process.stdout.write(stringify([Object.keys(newRecord)]));
        }
        process.stdout.write(stringify([newRecord]));
        headers = false;
    }

    function makeNewRecord(r) {
        return {
            REGISTERED: r.Registration_Date.replace(/\//g, '-'),
            LASTNAME: r.Last_Name,
            FIRSTNAME: r.First_Name,
            MIDDLE: r.Middle_Name,
            SUFFIX: r.Name_Style.replace(/(?<=^[JS])R$/, 'r'),
            STATUS: (r['Voter Status'] || r.Voter_Status).slice(0, 1),
            PARTY: r.Party.toUpperCase(),
            RES_HOUSE: r.Street_Number,
            RES_FRAC: (r.Street_Number_Suffix || '').replace(/^20\d\d\/01\/02$/, '1/2'),
            RES_APT: r.Apartment_Number.replace(/^20\d\d\/01\/02$/, '1/2'),
            RES_STREET: r.Street_Name.replace(/^\d+(?:ST|ND|RD|TH)$/i, m => m.toLowerCase()) + ' ' +
                r.Street_Type.slice(0, 1) + r.Street_Type.slice(1).toLowerCase() + ' ' +
                (r.Street_Dir || r.Street_Dir_Suffix),
            RES_CITY: (r.City_Name || r.City).slice(0, 25),
            RES_STATE: 'DC',
            RES_ZIP: r.Zip_Code.slice(0, 5),
            RES_ZIP4: '',
            PRECINCT: (r.Precinct || '0').replace(/\..*$/, ''), // remove fractional part
            WARD: r.WARD || r.City_Ward || r.WRD,
            ANC: r.ANC.replace(/^3\/4/, '3'),
            SMD: (r.SMD || r.House_District || '').replace(/^3\/4/, '3')
                .replace(/^(\d)(0+)$/, (m, m1, m2) => m1 + 'E' + m2.length.toString().padStart(2, '0')),
            IS_US_CITIZEN: r.IsUSCitizen || '',
            V110822G: r['2022 GENERAL ELECTION(Nov/08/2022)'],
            V062122P: r['2022 PRIMARY ELECTION(Jun/21/2022)'],
            V110320G: r['2020 DC PRESIDENTIAL GENERAL ELECTI(Nov/03/2020)'],
            V061620S: r['2020 SPECIAL ELECTION WARD 2(Jun/16/2020)'],
            V060220P: r['2020 DC PRESIDENTIAL PRIMARY ELECTI(Jun/02/2020)'],
            V120418S: r['2018 SPECIAL WARD 4 BOARD OF ED ELE(Dec/04/2018)'],
            V110618G: r['2018 DC GENERAL ELECTION(Nov/06/2018)'],
            V061918P: r['2018 DC MAYORAL PRIMARY(Jun/19/2018)'],
            V110816G: r['2016  DC PRESIDENTIALGENERAL ELECTI(Nov/08/2016)'],
            V061416P: r['2016 PRESIDENTIAL PRIMARY ELECTION(Jun/14/2016)'],
            V042815S: r['SPECIAL ELECTION WARD 4 AND 8(Apr/28/2015)'],
            V110414G: r['DISTRICT OF COLUMBIA GENERAL ELECTI(Nov/04/2014)'],
            V071514S: r['SPECIAL BD OF ED ELECTION WARD 8(Jul/15/2014)'],
            V040114P: r['DC MAYORAL PRIMARY 2014(Apr/01/2014)'],
            V042313S: r['DIST OF COLUMBIA AT-LARGE SPECIAL E(Apr/23/2013)'],
            V112012G: r['DISTRICT OF COLUMBIA GENERAL ELECTI(Nov/06/2012)'],
            V052012S: r['SPECIAL ELECTION WARD 5 COUNCIL(May/15/2012)'],
            V042012P: r['DC PRESIDENTIAL PREF/COUNCIL PRIMAR(Apr/03/2012)'],
            V022012S: r['RECALL SPECIAL ELECTION 4B04(Feb/28/2012)'],
            V042011S: r['2011 DISTRICT OF COLUMBIA SPECIAL E(Apr/26/2011)'],
            V112010G: r['DISTRICT OF COLUMBIA GENERAL ELECTI(Nov/02/2010)'],
            V092010P: r['DISTRICT OF COLUMBIA PRIMARY(Sep/14/2010)'],
        };
    }
}

